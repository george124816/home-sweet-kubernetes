apiVersion: v1
kind: Namespace
metadata:
  labels:
    app: drone
  name: drone
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: drone-cm
  namespace: drone 
data:
  DRONE_GITEA_SERVER: http://git.kube.home/
  DRONE_GITEA_CLIENT_ID: "CLIENT_ID"
  DRONE_GITEA_CLIENT_SECRET: "CLIENT_SECRET"
  DRONE_RPC_SECRET: "RPC_SECRET" 
  DRONE_SERVER_HOST: "drone.kube.home"
  DRONE_SERVER_PROTO: http
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: drone-pvc
  namespace: drone 
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: longhorn-sc
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: drone
  namespace: drone 
  labels:
    app: drone
spec:
  replicas: 1
  selector:
    matchLabels:
      app: drone
  template:
    metadata:
      labels:
        app: drone
    spec:
      containers:
        - name: drone
          image: drone/drone:2
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 80
          envFrom:
            - configMapRef:
                name: drone-cm
          volumeMounts:
            - mountPath: /data
              name: dronevol
      volumes:
        - name: dronevol
          persistentVolumeClaim:
            claimName: drone-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: drone
  namespace: drone 
  labels:
    app: drone
spec:
  selector:
    app: drone
  type: NodePort
  ports:
    - port: 80
      name: http
      protocol: TCP
      targetPort: 80
---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: drone
  name: drone-runner
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: drone 
  name: drone-runner
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
- apiGroups:
  - ""
  resources:
  - pods
  - pods/log
  verbs:
  - get
  - create
  - delete
  - list
  - watch
  - update

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: drone-runner
  namespace: drone 
subjects:
- kind: ServiceAccount
  name: drone-runner
  namespace: drone
roleRef:
  kind: Role
  name: drone-runner
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: drone-runner
  namespace: drone 
  labels:
    app.kubernetes.io/name: drone
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: drone
  template:
    metadata:
      labels:
        app.kubernetes.io/name: drone
    spec:
      serviceAccountName: drone-runner
      containers:
        - name: runner
          image: drone/drone-runner-kube:latest
          ports:
            - containerPort: 3000
          env:
            - name: DRONE_NAMESPACE_DEFAULT
              value: "drone"
            - name: DRONE_RPC_HOST
              value: "drone.kube.home"
            - name: DRONE_RPC_PROTO
              value: http
            - name: DRONE_RPC_SECRET
              value: "RPC_SECRET"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: drone 
  name: drone-ingress
spec:
  rules:
  - host: drone.kube.home
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: drone 
            port:
              number: 80
  ingressClassName: nginx
