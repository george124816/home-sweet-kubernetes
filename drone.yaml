apiVersion: v1
kind: Namespace
metadata:
  name: drone
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: drone-cm
  namespace: drone
data:
  DRONE_GITEA_SERVER: http://192.168.18.140/
  DRONE_GITEA_CLIENT_ID: GITEA_CLIENT_ID
  DRONE_GITEA_CLIENT_SECRET: GITEA_CLIENT_SECRET
  DRONE_RPC_SECRET: DRONE_SECRET
  DRONE_SERVER_HOST: "192.168.18.141"
  DRONE_SERVER_PROTO: http
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: drone-pv
  namespace: drone
spec:
  storageClassName: ""
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  nfs:
    path: /mnt/hd1/kubernetes/drone
    server: 192.168.18.100
    readOnly: false
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: drone-pvc
  namespace: drone
spec:
  storageClassName: ""
  volumeName: drone-pv
  accessModes:
    - ReadWriteMany
  volumeMode: Filesystem
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: drone
  namespace: drone
  labels:
    app: drone
spec:
  replicas: 1
  selector:
    matchLabels:
      app: drone
  template:
    metadata:
      labels:
        app: drone
    spec:
      containers:
        - name: drone
          image: drone/drone:2
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 80
          envFrom:
            - configMapRef:
                name: drone-cm
          volumeMounts:
            - mountPath: /data
              name: dronevol
      volumes:
        - name: dronevol
          persistentVolumeClaim:
            claimName: drone-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: drone
  namespace: drone
  labels:
    app: drone
spec:
  selector:
    app: drone
  ports:
    - port: 80
      name: http
      protocol: TCP
      targetPort: 80
  type: LoadBalancer
  loadBalancerIP: 192.168.18.141
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: drone
  name: drone
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - create
      - delete
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/log
    verbs:
      - get
      - create
      - delete
      - list
      - watch
      - update

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: drone
  namespace: drone
subjects:
  - kind: ServiceAccount
    name: default
    namespace: drone
roleRef:
  kind: Role
  name: drone
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: drone-runner
  namespace: drone
  labels:
    app.kubernetes.io/name: drone
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: drone
  template:
    metadata:
      labels:
        app.kubernetes.io/name: drone
    spec:
      containers:
        - name: runner
          image: drone/drone-runner-kube:latest
          ports:
            - containerPort: 3000
          env:
            - name: DRONE_RPC_HOST
              value: "192.168.18.141"
            - name: DRONE_RPC_PROTO
              value: http
            - name: DRONE_RPC_SECRET
              value: DRONE_SECRET
